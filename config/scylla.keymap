#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&mo 2      &kp N1          &kp N2          &kp N3       &kp N4         &kp N5      &kp N6   &kp N7        &kp N8       &kp N9      &kp N0      &trans
&kp GRAVE  &kp Q           &kp W           &kp F        &kp P          &kp B       &kp J    &kp L         &kp U        &kp Y       &kp SEMI    &kp APOSTROPHE
&kp MINUS  &mt LEFT_GUI A  &mt LEFT_ALT R  &mt LCTRL S  &mt LSHIFT T   &kp G       &kp M    &mt RSHIFT N  &mt RCTRL E  &mt RALT I  &mt RGUI O  &kp EQUAL
&trans     &kp Z           &kp X           &kp C        &kp D          &kp V       &kp K    &kp H         &kp COMMA    &kp DOT     &kp SLASH   &kp BACKSLASH
                                           &kp ESC      &kp BACKSPACE  &kp DELETE  &kp TAB  &lt 1 SPACE   &kp ENTER
                                                        &trans         &trans      &trans   &trans
            >;
        };

        MoreKeys {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6                &kp F7                 &kp F8    &kp F9    &kp F10  &kp F11    &kp F12
&trans  &trans  &trans  &trans  &trans  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans    &trans    &trans   &trans     &trans
&trans  &trans  &trans  &trans  &trans  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans    &trans    &trans   &trans     &trans
&trans  &trans  &trans  &trans  &trans  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp LEFT  &kp DOWN  &kp UP   &kp RIGHT  &trans
                        &trans  &trans  &trans                &trans                 &trans    &trans
                                &trans  &trans                &trans                 &trans
            >;
        };

        Bluetooth {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans  &bt BT_CLR  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans        &trans        &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans        &trans        &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans        &trans        &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
                                    &trans        &trans  &trans      &trans  &trans  &trans
                                                  &trans  &trans      &trans  &trans
            >;
        };
    };
};
