#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&lt {
};

/ {
    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_LEFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <220>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <48 49 50 54 55 51 52 53 56 57 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 42 43 44 45 46 47>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_RIGHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <48 49 50 51 52 53 54 55 56 57 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
        };

        smart_shift: smart_shift {
            compatible = "zmk,behavior-mod-morph";
            label = "SMART_SHIFT";
            bindings = <&sk LEFT_SHIFT>, <&caps_word>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        hml_shift: hml_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "HML_SHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            require-prior-idle-ms = <70>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <48 49 50 54 55 51 52 53 56 57 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 42 43 44 45 46 47>;
        };

        hmr_shift: hmr_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR_SHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            require-prior-idle-ms = <70>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <48 49 50 51 52 53 54 55 56 57 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
        };
    };

    macros {
        iterm: iterm {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_COMMAND &kp LEFT_COMMAND>;
            label = "ITERM";
        };
    };

    combos {
        compatible = "zmk,combos";

        a_ogonek {
            bindings = <&kp RA(A)>;
            key-positions = <13 25>;
        };

        e_ogonek {
            bindings = <&kp RA(E)>;
            key-positions = <32 20>;
        };

        l_slash {
            bindings = <&kp RA(L)>;
            key-positions = <19 7>;
        };

        o_acute {
            bindings = <&kp RA(O)>;
            key-positions = <34 22>;
        };

        n_acute {
            bindings = <&kp RA(N)>;
            key-positions = <31 19>;
        };

        s_acute {
            bindings = <&kp RA(S)>;
            key-positions = <27 15>;
        };

        c_acute {
            bindings = <&kp RA(C)>;
            key-positions = <39 27>;
        };

        z_acute {
            bindings = <&kp RA(X)>;
            key-positions = <38 26>;
        };

        z_dot {
            bindings = <&kp RA(Z)>;
            key-positions = <37 25>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&mo 4         &kp LC(LG(LS(NUMBER_4)))  &trans           &trans        &trans               &trans   &trans         &kp MINUS            &kp EQUAL             &trans       &trans            &kp LC(LG(LA(N7)))
&kp GRAVE     &kp Q                     &kp W            &kp F         &kp P                &kp B    &kp J          &kp L                &kp U                 &kp Y        &kp SEMICOLON     &kp RIGHT_ALT
&smart_shift  &hml LEFT_GUI A           &hml LEFT_ALT R  &hml LCTRL S  &hml_shift LSHIFT T  &kp G    &kp M          &hmr_shift RSHIFT N  &hmr RIGHT_CONTROL E  &hmr RALT I  &hmr RIGHT_GUI O  &kp APOSTROPHE
&kp LCTRL     &kp Z                     &kp X            &kp C         &kp D                &kp V    &kp K          &kp H                &kp COMMA             &kp DOT      &kp SLASH         &kp BACKSLASH
                                                         &lt 2 ESCAPE  &lt 1 SPACE          &kp TAB  &kp BACKSPACE  &mo 1                &lt 2 ENTER
                                                                       &iterm               &mo 3    &kp DEL        &sk RIGHT_ALT
            >;
        };

        Nav {
            bindings = <
&none  &none     &none     &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &none   &kp K_MUTE  &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP
&none  &none     &none     &none                 &none                 &none   &none       &none           &none             &none       &none              &none
&none  &kp LGUI  &kp LALT  &kp LCTRL             &kp LSHFT             &none   &kp LEFT    &kp DOWN        &kp UP            &kp RIGHT   &none              &none
&none  &none     &none     &none                 &none                 &none   &kp HOME    &kp PAGE_DOWN   &kp PG_UP         &kp END     &none              &none
                           &trans                &kp SPACE             &trans  &trans      &trans          &trans
                                                 &trans                &trans  &trans      &trans
            >;
        };

        Numbers {
            bindings = <
&trans  &kp LESS_THAN         &trans  &kp N0        &trans     &kp GREATER_THAN       &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LEFT_BRACE        &kp N7  &kp N8        &kp N9     &kp RIGHT_BRACE        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LEFT_PARENTHESIS  &kp N4  &kp N5        &kp N6     &kp RIGHT_PARENTHESIS  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LEFT_BRACKET      &kp N1  &kp N2        &kp N3     &kp RIGHT_BRACKET      &trans  &trans  &trans  &trans  &trans  &trans
                                      &kp NUMBER_0  &kp SPACE  &trans                 &trans  &trans  &trans
                                                    &trans     &trans                 &trans  &trans
            >;
        };

        FnKeys {
            bindings = <
&trans  &trans  &kp F10  &kp F11  &kp F12    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp F7   &kp F8   &kp F9     &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp F4   &kp F5   &kp F6     &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp F1   &kp F2   &kp F3     &trans  &trans  &trans  &trans  &trans  &trans  &trans
                         &trans   &kp SPACE  &trans  &trans  &trans  &trans
                                  &trans     &trans  &trans  &trans
            >;
        };

        Bluetooth {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans  &bt BT_CLR  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans        &trans        &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans        &trans        &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans        &trans        &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
                                    &trans        &trans  &trans      &trans  &trans  &trans
                                                  &trans  &trans      &trans  &trans
            >;
        };
    };
};
